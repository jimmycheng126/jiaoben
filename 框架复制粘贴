// ==UserScript==
// @name         吉米号码发送框架
// @namespace    http://tampermonkey.net/
// @version      1.2
// @description  按顺序发送手机号码，并处理验证码和动态加载问题
// @author       jimmy
// @match        *://*/register
// @match        *://*/register/SMSRegister
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    // 初始化手机号码库
    let phoneNumbers = [];
    let isRunning = false; // 脚本运行状态
    let currentIndex = parseInt(localStorage.getItem('currentIndex')) || 0;

    // 从 localStorage 获取手机号码库
    phoneNumbers = JSON.parse(localStorage.getItem('phoneNumbers')) || [];

    // 创建用户界面
    const controlPanel = document.createElement('div');
    controlPanel.style.position = 'fixed';
    controlPanel.style.top = '10px';
    controlPanel.style.right = '10px';
    controlPanel.style.zIndex = '1000';
    controlPanel.style.backgroundColor = '#f9f9f9';
    controlPanel.style.border = '1px solid #ccc';
    controlPanel.style.padding = '10px';
    controlPanel.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.1)';
    controlPanel.innerHTML = `
        <textarea id="phoneNumbersInput" rows="10" cols="30" placeholder="请在这里粘贴手机号码，每行一个"></textarea>
        <button id="submitNumbers" style="margin: 5px;">提交号码</button>
        <button id="clearNumbers" style="margin: 5px;">清除号码</button>
        <button id="startScript" style="margin: 5px; background-color: #4CAF50; color: white;">开始</button>
        <button id="stopScript" style="margin: 5px; background-color: #f44336; color: white;">停止</button>
    `;
    document.body.appendChild(controlPanel);

    // 提交按钮的事件处理
    document.getElementById('submitNumbers').addEventListener('click', () => {
        const inputText = document.getElementById('phoneNumbersInput').value;
        phoneNumbers = inputText.split('\n').map(num => num.trim()).filter(num => num); // 去除空行
        localStorage.setItem('phoneNumbers', JSON.stringify(phoneNumbers));
        alert('手机号码已更新！');
    });

    // 清除按钮的事件处理
    document.getElementById('clearNumbers').addEventListener('click', () => {
        phoneNumbers = [];
        localStorage.removeItem('phoneNumbers');
        alert('手机号码已清空！');
    });

    // 开始按钮的事件处理
    document.getElementById('startScript').addEventListener('click', () => {
        if (!isRunning) {
            isRunning = true;
            alert('脚本已启动！');
            processNextNumber();
        }
    });

    // 停止按钮的事件处理
    document.getElementById('stopScript').addEventListener('click', () => {
        isRunning = false;
        alert('脚本已停止！');
    });

    // 动态等待页面元素
    function waitForElement(selector, interval = 500, timeout = 10000) {
        return new Promise((resolve, reject) => {
            const startTime = Date.now();
            const timer = setInterval(() => {
                const element = document.querySelector(selector);
                if (element) {
                    clearInterval(timer);
                    resolve(element);
                } else if (Date.now() - startTime > timeout) {
                    clearInterval(timer);
                    reject(new Error(`等待元素 ${selector} 超时`));
                }
            }, interval);
        });
    }

    // 检查验证码并刷新页面
    function handleCaptcha() {
        const captchaElement = document.getElementById('aliyunCaptcha-window-popup');
        if (captchaElement && captchaElement.style.display === 'block') {
            console.log("检测到滑动验证码，刷新页面...");
            location.reload();
        }
    }

    // 处理下一个手机号码
    async function processNextNumber() {
        if (!isRunning) {
            console.log("脚本已停止运行。");
            return;
        }

        if (currentIndex >= phoneNumbers.length) {
            alert("所有手机号码已发送完毕！");
            isRunning = false;
            return;
        }

        console.log(`准备发送第 ${currentIndex + 1} 个号码: ${phoneNumbers[currentIndex]}`);

        try {
            const inputField = await waitForElement('input[name="mobile"]');
            inputField.value = phoneNumbers[currentIndex];
            console.log(`输入手机号码: ${phoneNumbers[currentIndex]}`);

            const sendButton = await waitForElement('.btn.warning.get-code');
            sendButton.click();
            console.log("点击发送按钮。");

            // 等待并检查验证码
            setTimeout(() => {
                handleCaptcha();

                // 等待确认按钮
                setTimeout(async () => {
                    const yesButton = document.querySelector('.swal2-confirm');
                    if (yesButton) {
                        yesButton.click();
                        console.log("点击确认按钮。");

                        // 如果没有验证码，处理下一个号码
                        setTimeout(() => {
                            currentIndex++;
                            localStorage.setItem('currentIndex', currentIndex);
                            processNextNumber(); // 递归处理下一个号码
                        }, 3000);
                    } else {
                        console.error('未找到确认按钮，请检查页面结构。');
                    }
                }, 1000);
            }, 1000);

        } catch (error) {
            console.error('处理号码时出错:', error);
            setTimeout(processNextNumber, 3000); // 出错后延迟处理下一个号码
        }
    }

    // 页面加载后自动启动脚本
    window.onload = function () {
        console.log("页面加载完成。");
    };
})();
