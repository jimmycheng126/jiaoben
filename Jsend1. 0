// ==UserScript==
// @name         pc gorry
// @namespace    http://tampermonkey.net/
// @version      2.1
// @description  按顺序发送手机号码，并处理验证码和动态加载问题
// @author       Jimmy cheng
// @match        *://*/register
// @match        *://*/register/SMSRegister
// @grant        GM_log
// @grant        GM_xmlhttpRequest
// ==/UserScript==

(function () {
    'use strict';

    // 手机号码库
  const phoneNumbers = [
    "01139433358",
    "01139471706",
    "01139458328",
    "01139469377",
    "01139415920",
    "01139467840",
    "01139433032",
    "01139464719",
    "01139464939",
    "01139464756",
    "01139476410",
    "01139465512",
    "01139415873",
    "01139464743",
    "01139416826",
    "01139464709",
    "01139434110",
    "01139464768",
    "01139413767",
    "01139464217",
    "01139416858",
    "01139472124",
    "01139429398",
    "01139463150",
    "01139416856",
    "01139470206",
    "01139416893",
    "01139464926",
    "01139429361",
    "01139462673",
    "01139429451",
    "01139462108",
    "01139429395",
    "01139465218",
    "01139434051",
    "01139416845",
    "01139464297",
    "01139416812",
    "01139471762",
    "01139413791",
    "01139431585",
    "01139413823",
    "01139429492",
    "01139416827",
    "01139429412",
    "01139429389",
    "01139433574",
    "01139413783",
    "01139429460",
    "01139413788",
    "01139464201",
    "01139416870",
    "01139455648",
    "01139433896",
    "01139471784",
    "01139433576",
    "01139413784",
    "01139464744",
    "01139413769",
    "01139464954",
    "01139413826",
    "01139464731",
    "01139413778",
    "01139471727",
    "01139433979",
    "01139434002",
    "01139433968",
    "01139433969",
    "01139413812",
    "01139430989",
    "01139431035",
    "01139433967",
    "01139433960",
    "01139431365",
    "01139431038",
    "01139431362",
    "01139432668",
    "01139433281",
    "01139432664",
    "01139455916",
    "01139455893",
    "01139429324",
    "01139429240",
    "01139431021",
    "01139429756",
    "01139464165",
    "01139429782",
    "01139455542",
    "01139469766",
    "01139429629",
    "01139469321",
    "01139468647",
    "01139455718",
    "01139455147"
];

    // 从 localStorage 获取当前索引
    let currentIndex = parseInt(localStorage.getItem('currentIndex')) || 0;
    let isRunning = true; // 控制脚本是否运行

    // 防止重复运行
    if (window.__SCRIPT_RUNNING__) return;
    window.__SCRIPT_RUNNING__ = true;

    // 创建停止按钮
    function createStopButton() {
        const button = document.createElement('button');
        button.innerText = '停止发送';
        button.style.position = 'fixed';
        button.style.top = '10px';
        button.style.right = '10px';
        button.style.zIndex = '1000';
        button.onclick = () => {
            isRunning = false;
            alert("发送已停止。");
        };
        document.body.appendChild(button);
    }

    // 检查元素是否加载完成
    function waitForElement(selector, callback, interval = 500, timeout = 10000) {
        const startTime = Date.now();
        const timer = setInterval(() => {
            const element = document.querySelector(selector);
            if (element) {
                clearInterval(timer);
                callback(element);
            } else if (Date.now() - startTime > timeout) {
                clearInterval(timer);
                console.error(`等待元素 ${selector} 超时`);
            }
        }, interval);
    }

    // 更新剩余号码显示
    function updateRemainingCount() {
        const remainingCount = phoneNumbers.length - currentIndex;
        const display = document.getElementById('remainingCount');
        if (display) {
            display.innerText = `剩余号码: ${remainingCount}`;
        } else {
            const countDisplay = document.createElement('div');
            countDisplay.id = 'remainingCount';
            countDisplay.style.position = 'fixed';
            countDisplay.style.top = '50px';
            countDisplay.style.right = '10px';
            countDisplay.style.zIndex = '1000';
            countDisplay.style.backgroundColor = 'white';
            countDisplay.style.padding = '10px';
            countDisplay.style.border = '1px solid black';
            countDisplay.innerText = `剩余号码: ${remainingCount}`;
            document.body.appendChild(countDisplay);
        }
    }

    // 检查验证码并刷新
    function checkCaptchaAndReload() {
        const captchaElement = document.getElementById('aliyunCaptcha-window-popup');
        if (captchaElement && captchaElement.style.display === 'block') {
            console.log("检测到滑动验证码，刷新页面...");
            location.reload();
        }
    }

    // 处理下一个手机号码
    function processNextNumber() {
        if (!isRunning) return; // 如果停止运行，直接返回

        if (currentIndex >= phoneNumbers.length) {
            alert("所有手机号码已发送完毕。");
            return;
        }

        console.log(`准备发送第 ${currentIndex + 1} 个号码: ${phoneNumbers[currentIndex]}`);
        updateRemainingCount(); // 更新剩余号码

        // 等待输入框加载
        waitForElement('input[name="mobile"]', (inputField) => {
            inputField.value = phoneNumbers[currentIndex];
            console.log(`输入手机号码: ${phoneNumbers[currentIndex]}`);

            waitForElement('.btn.warning.get-code', (sendButton) => {
                // 点击发送按钮
                sendButton.click();
                console.log("点击发送按钮。");

                // 等待确认按钮
                waitForElement('.swal2-confirm', (yesButton) => {
                    yesButton.click();
                    console.log("点击确认按钮。");

                    // 检查滑动验证码
                    setTimeout(() => {
                        checkCaptchaAndReload();

                        // 如果没有验证码，等待一段时间后处理下一个号码
                        setTimeout(() => {
                            currentIndex++;
                            localStorage.setItem('currentIndex', currentIndex);
                            processNextNumber(); // 继续处理下一个号码
                        }, 3000);
                    }, 1000);
                });
            });
        });
    }

    // 初始化
    function init() {
        createStopButton(); // 创建停止按钮
        updateRemainingCount(); // 更新剩余号码显示
        processNextNumber(); // 开始处理号码
    }

    // 启动脚本
    init();
})();
